[tool.poetry]
name = "chronal-api"
version = "0.1.0"
description = ""
authors = ["bartosz121 <bmagiera121@gmail.com>"]
readme = "README.md"
packages = [{ include = "chronal_api" }]


[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.103.0"
pydantic-settings = "^2.0.3"
uvicorn = { extras = ["all"], version = "^0.23.2" }
httptools = "^0.6.0"
uvloop = "^0.17.0"
sqlalchemy = { extras = ["asyncio"], version = "^2.0.20" }
asyncpg = "^0.28.0"
alembic = "^1.11.3"
httpx = "^0.24.1"
poethepoet = "^0.22.0"
aiosqlite = "^0.19.0"
pysqlite3 = "^0.5.1"
arrow = "^1.2.3"
pyhumps = "^3.8.0"
passlib = "^1.7.4"
argon2-cffi = "^23.1.0"
pydantic = { extras = ["email"], version = "^2.3.0" }
sqlalchemy-utils = "^0.41.1"


[tool.poetry.group.dev.dependencies]
mypy = "^1.5.1"
ruff = "^0.0.286"
black = "^23.7.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"
coverage = { extras = ["toml"], version = "^7.3.0" }
faker = "^19.6.0"
factory-boy = "^3.3.0"
async-factory-boy = "^1.0.1"
pytest-mock = "^3.11.1"
pytest-env = "^1.0.1"


[tool.ruff]
target-version = "py311"
line-length = 99
unfixable = [
    "F401", # Don't touch unused imports
    "F841", # Don't touch unused variables
]


[tool.black]
target-version = ["py311"]
line-length = 99


[tool.poe.executor]
type = "virtualenv"
location = ".venv"


[tool.poe.tasks.test-api]
help = "Run tests chronal-api"
cmd = "pytest -vv tests"


[tool.poe.tasks.test-lib]
help = "Run tests lib"
cmd = "pytest -vv tests_lib"


[tool.poe.tasks.test]
help = "Run tests"


[[tool.poe.tasks.test.sequence]]
ref = "test-api"


[[tool.poe.tasks.test.sequence]]
ref = "test-lib"


[tool.poe.tasks.serve]
help = "Run uvicorn server"
cmd = "python chronal_api/main.py"
use_exec = true


[tool.poe.tasks.healthcheck]
help = "Run healthcheck"
shell = "curl --silent --fail http://localhost:$(python -c 'from chronal_api.settings import UvicornSettings;print(UvicornSettings().port)')/healthcheck"

# [tool.poe.tasks.mypy]
# help = "Run mypy"
# cmd = "mypy --install-types --non-interactive chronal_api"


[tool.poe.tasks.lint]
help = "Run lint check"


[[tool.poe.tasks.lint.sequence]]
help = "Run black check ."
cmd = "black --check --diff ."


[[tool.poe.tasks.lint.sequence]]
help = "Run ruff check"
cmd = "ruff check ."


[tool.poe.tasks.format]
help = "Run formatters"


[[tool.poe.tasks.format.sequence]]
help = "Run black"
cmd = "black ."

[[tool.poe.tasks.format.sequence]]
help = "Run ruff"
cmd = "ruff --fix ."


[tool.ruff.isort]
known-first-party = ["chronal_api"]


[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]


[tool.pytest.ini_options]
asyncio_mode = "auto"
env = [
    "CHRONAL_ENVIRONMENT=TESTING",
    "CHRONAL_DEBUG=False",
    "DB_HOST=//tmp/chronal_test.db",
    "DB_NAME=chronal_test",
]


[tool.coverage.run]
source_pkgs = ["chronal_api", "tests"]
branch = true
parallel = true
omit = ["chronal_api/__about__.py"]


[tool.coverage.paths]
chronal_api = ["chronal_api", "*/chronal-api/chronal_api"]
tests = ["tests", "*/chronal-api/tests"]


[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
